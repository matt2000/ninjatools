#!/bin/bash
if [[ $1 == "" ]]
then
  REMOTE="`cat .drifthost`"
  WEBROOT="`cat .driftpath`"
elif [[ $1 == "-h" || $1 == "--help" ]]
then
  echo "Replaces database for current site with remote database. Requires Drush."
  echo "Usage: drift [user@host] /path/to/site"
  echo "You'll be prompted for confirmation. Answering (b)ackup will cause a back-up of the current database to be saved before it is replaced with the remote database. Answering (d)ownload will cause the remote database to be downloaded only, leaving the current database unchanged."
  exit 0
elif [ $2 ]
then
  WEBROOT="$2"
  REMOTE="$1"
else
  WEBROOT="$1"
fi

DATE=`date +%F-%H%M`
FILENAME="drift-$DATE.sql.gz"
TMPLOCAL="/tmp/drift-local/"
TMPREMOTE="/tmp/drift-remote/"

echo "'drift -h' for usage info."
echo "The following database will be overwritten:"
drush sql-conf

read -p "Are you sure you want to continue? <No/yes/backup/download> " prompt
if [[ $prompt == "y" || $prompt == "Y" || $prompt == "yes" || $prompt == "Yes" ]]
then
  echo "OK. Continuing."
elif [[ $prompt == 'b' || $prompt == 'backup' ]]
then
  mkdir $TMPLOCAL
  echo "Backing up to $TMPLOCAL$FILENAME"
  drush sql-dump | gzip -c > $TMPLOCAL$FILENAME
elif [[ $prompt == 'd' || $promt == 'dryrun' ]]
then
  DRYRUN=1
  echo "Downloading database to $TMPREMOTE only. Database will not be overwritten."
else
  echo "Aborting."
  exit 0
fi

COMMAND="mkdir $TMPREMOTE; cd $WEBROOT && drush sql-dump | gzip -c > $TMPREMOTE$FILENAME"

if [ $REMOTE ]
then
  ssh $REMOTE $COMMAND
  mkdir $TMPREMOTE
  scp $REMOTE:$TMPREMOTE$FILENAME $TMPREMOTE
  ssh $REMOTE "rm $TMPREMOTE$FILENAME"
else
  ORIGIN=`pwd`
  eval $COMMAND
  echo $COMMAND
  cd $ORIGIN
fi
  

if [ $DRYRUN ]
then
  echo "Database dump saved to $TMPREMOTE$FILENAME"
else
  echo 'Overwriting database.'
  zcat $TMPREMOTE$FILENAME | `drush sql-connect`
  drush cc all
fi
